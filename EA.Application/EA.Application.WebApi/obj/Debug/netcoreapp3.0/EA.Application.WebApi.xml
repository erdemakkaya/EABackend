<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EA.Application.WebApi</name>
    </assembly>
    <members>
        <member name="M:EA.Application.WebApi.Controllers.AppResourceController.Add(EA.Application.Dto.DTOS.AppResourceDto)">
            <summary>
            Unit of work 'ün çalışması ve kayıtların veritabanına ulaşması için Add,Update,Delete metotlarını override ediyoruz
            Bu bir zorunluluk değil eğer unitofwork'ü ApiBase içerisinde savechanges yapacak şekilde kullanırsanız bu metotları override etmek zorunda kalmazsınız
            Ancak o zaman unit of work mantığı boş yere bu sisteme eklenmiş gibi olacak 
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:EA.Application.WebApi.Controllers.AppResourceController.GetResourcesByLanguage(System.Guid)">
            <summary>
            İstenen dile ait tüm çeviriler 1 gün boyunca sunucu belleğine 
            2 dakika boyunca ise response cache olarak ekleniyor. 
            Guid tipindeki dil Id si ise memory cache için anahtar görevi görüyor.
            </summary>
            <param name="LanguageId">İstenen dil</param>
            <returns></returns>
        </member>
        <member name="M:EA.Application.WebApi.Controllers.AppResourceController.ClearCache(System.Guid)">
            <summary>
            memory cache içinde bulunan dile ait verilerin silinmesi işlemini yapan metot
            </summary>
            <param name="LanguageId"></param>
            <returns></returns>
        </member>
        <member name="T:EA.Application.WebApi.Controllers.CustomerController">
            <summary>
            Müşteri tablosu işlemleri için kullanılacak sınıf.
            </summary>
        </member>
        <member name="M:EA.Application.WebApi.Controllers.CustomerController.Find(System.Guid)">
            <summary>
            Include işlemi olduğu için Find metodunu override ediyoruz.
            </summary>
            <param name="id">İstenen kaydın Id bilgisi</param>
            <returns></returns>
        </member>
        <member name="M:EA.Application.WebApi.Controllers.CustomerController.GetAll">
            <summary>
            Include işlemi olduğu için getall metodunu override ediyoruz.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EA.Application.WebApi.Controllers.CustomerController.Add(EA.Application.Dto.DTOS.CustomerDto)">
            <summary>
            Unit of work 'ün çalışması ve kayıtların veritabanına ulaşması için Add,Update,Delete metotlarını override ediyoruz
            Bu bir zorunluluk değil eğer unitofwork'ü ApiBase içerisinde savechanges yapacak şekilde kullanırsanız bu metotları override etmek zorunda kalmazsınız
            Ancak o zaman unit of work mantığı boş yere bu sisteme eklenmiş gibi olacak 
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:EA.Application.WebApi.Controllers.OrganizationController.Add(EA.Application.Dto.DTOS.OrganizationDto)">
            <summary>
            Unit of work 'ün çalışması ve kayıtların veritabanına ulaşması için Add,Update,Delete metotlarını override ediyoruz
            Bu bir zorunluluk değil eğer unitofwork'ü ApiBase içerisinde savechanges yapacak şekilde kullanırsanız bu metotları override etmek zorunda kalmazsınız
            Ancak o zaman unit of work mantığı boş yere bu sisteme eklenmiş gibi olacak 
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:EA.Application.WebApi.Controllers.TokenController">
            <summary>
            Token oluşturulmasını ve login işlemlerinin gerçekleşmesini sağlayan sınıf.
            Route Authentication diyerek bu url üzerinde çalışacağını bildiriyoruz burası size kalmış ahmet, mehmet bile yazabilirsiniz
            </summary>
        </member>
        <member name="M:EA.Application.WebApi.Controllers.TokenController.#ctor(System.IServiceProvider,AutoMapper.IMapper)">
            <summary>
            Yapıcı metod
            </summary>
            <param name="service"></param>
        </member>
        <member name="M:EA.Application.WebApi.Controllers.TokenController.LoginAsync(EA.Application.WebApi.VM.LoginModel)">
            <summary>
            Login işleminin gerçekleşeceği metot.
            Route LoginAsync diyerek bu link ile erişilmesini söylüyoruz.
            </summary>
            <param name="loginModel">Kullanıcı işlemleri için gerekli bilgileri barındıran sınıf</param>
            <returns></returns>
        </member>
        <member name="T:EA.Application.WebApi.Controllers.UserController">
            <summary>
            Identity Alt yapısını kullanarak kullanıcı işlemleri yapacağımız sınıf
            </summary>
        </member>
        <member name="T:EA.Application.WebApi.VM.LoginModel">
            <summary>
            Login için kullanıcıdan istenen bilgileri taşır
            </summary>
        </member>
        <member name="P:EA.Application.WebApi.VM.LoginModel.Email">
            <summary>
            Email alanı zorunludur 
            </summary>
        </member>
        <member name="P:EA.Application.WebApi.VM.LoginModel.Password">
            <summary>
            Parola alanı zorunludur
            </summary>
        </member>
        <member name="T:EA.Application.WebApi.VM.TokenModel">
            <summary>
            Kullanıcıya geri döneceğimiz token bilgilerini taşıyacak
            </summary>
        </member>
        <member name="P:EA.Application.WebApi.VM.TokenModel.Token">
            <summary>
            Object türünden token 
            </summary>
        </member>
        <member name="P:EA.Application.WebApi.VM.TokenModel.UserDto">
            <summary>
            Kullanıcının diğer bilgileri 
            </summary>
        </member>
    </members>
</doc>
